/**
 * generated by Xtext 2.12.0
 */
package cs.queensu.ca.unity.impl;

import cs.queensu.ca.unity.RealLiteral;
import cs.queensu.ca.unity.UnityPackage;
import cs.queensu.ca.unity.Value;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Value</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link cs.queensu.ca.unity.impl.ValueImpl#isMinues <em>Minues</em>}</li>
 *   <li>{@link cs.queensu.ca.unity.impl.ValueImpl#getValue <em>Value</em>}</li>
 *   <li>{@link cs.queensu.ca.unity.impl.ValueImpl#getFixedPointValue <em>Fixed Point Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ValueImpl extends MinimalEObjectImpl.Container implements Value
{
  /**
   * The default value of the '{@link #isMinues() <em>Minues</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMinues()
   * @generated
   * @ordered
   */
  protected static final boolean MINUES_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isMinues() <em>Minues</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMinues()
   * @generated
   * @ordered
   */
  protected boolean minues = MINUES_EDEFAULT;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final int VALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected int value = VALUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getFixedPointValue() <em>Fixed Point Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFixedPointValue()
   * @generated
   * @ordered
   */
  protected RealLiteral fixedPointValue;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ValueImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UnityPackage.Literals.VALUE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isMinues()
  {
    return minues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMinues(boolean newMinues)
  {
    boolean oldMinues = minues;
    minues = newMinues;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UnityPackage.VALUE__MINUES, oldMinues, minues));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(int newValue)
  {
    int oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UnityPackage.VALUE__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RealLiteral getFixedPointValue()
  {
    return fixedPointValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFixedPointValue(RealLiteral newFixedPointValue, NotificationChain msgs)
  {
    RealLiteral oldFixedPointValue = fixedPointValue;
    fixedPointValue = newFixedPointValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UnityPackage.VALUE__FIXED_POINT_VALUE, oldFixedPointValue, newFixedPointValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFixedPointValue(RealLiteral newFixedPointValue)
  {
    if (newFixedPointValue != fixedPointValue)
    {
      NotificationChain msgs = null;
      if (fixedPointValue != null)
        msgs = ((InternalEObject)fixedPointValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UnityPackage.VALUE__FIXED_POINT_VALUE, null, msgs);
      if (newFixedPointValue != null)
        msgs = ((InternalEObject)newFixedPointValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UnityPackage.VALUE__FIXED_POINT_VALUE, null, msgs);
      msgs = basicSetFixedPointValue(newFixedPointValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UnityPackage.VALUE__FIXED_POINT_VALUE, newFixedPointValue, newFixedPointValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UnityPackage.VALUE__FIXED_POINT_VALUE:
        return basicSetFixedPointValue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UnityPackage.VALUE__MINUES:
        return isMinues();
      case UnityPackage.VALUE__VALUE:
        return getValue();
      case UnityPackage.VALUE__FIXED_POINT_VALUE:
        return getFixedPointValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UnityPackage.VALUE__MINUES:
        setMinues((Boolean)newValue);
        return;
      case UnityPackage.VALUE__VALUE:
        setValue((Integer)newValue);
        return;
      case UnityPackage.VALUE__FIXED_POINT_VALUE:
        setFixedPointValue((RealLiteral)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UnityPackage.VALUE__MINUES:
        setMinues(MINUES_EDEFAULT);
        return;
      case UnityPackage.VALUE__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
      case UnityPackage.VALUE__FIXED_POINT_VALUE:
        setFixedPointValue((RealLiteral)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UnityPackage.VALUE__MINUES:
        return minues != MINUES_EDEFAULT;
      case UnityPackage.VALUE__VALUE:
        return value != VALUE_EDEFAULT;
      case UnityPackage.VALUE__FIXED_POINT_VALUE:
        return fixedPointValue != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (minues: ");
    result.append(minues);
    result.append(", value: ");
    result.append(value);
    result.append(')');
    return result.toString();
  }

} //ValueImpl
