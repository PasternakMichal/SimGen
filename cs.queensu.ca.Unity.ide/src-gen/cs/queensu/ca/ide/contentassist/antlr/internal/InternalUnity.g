/*
 * generated by Xtext 2.11.0
 */
grammar InternalUnity;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package cs.queensu.ca.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package cs.queensu.ca.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import cs.queensu.ca.services.UnityGrammarAccess;

}
@parser::members {
	private UnityGrammarAccess grammarAccess;

	public void setGrammarAccess(UnityGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSpecification
entryRuleSpecification
:
{ before(grammarAccess.getSpecificationRule()); }
	 ruleSpecification
{ after(grammarAccess.getSpecificationRule()); } 
	 EOF 
;

// Rule Specification
ruleSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSpecificationAccess().getSpecAssignment()); }
		(rule__Specification__SpecAssignment)*
		{ after(grammarAccess.getSpecificationAccess().getSpecAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetaObject
entryRuleMetaObject
:
{ before(grammarAccess.getMetaObjectRule()); }
	 ruleMetaObject
{ after(grammarAccess.getMetaObjectRule()); } 
	 EOF 
;

// Rule MetaObject
ruleMetaObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaObjectAccess().getGroup()); }
		(rule__MetaObject__Group__0)
		{ after(grammarAccess.getMetaObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePayload
entryRulePayload
:
{ before(grammarAccess.getPayloadRule()); }
	 rulePayload
{ after(grammarAccess.getPayloadRule()); } 
	 EOF 
;

// Rule Payload
rulePayload 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPayloadAccess().getGroup()); }
		(rule__Payload__Group__0)
		{ after(grammarAccess.getPayloadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParam
entryRuleParam
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamAccess().getGroup()); }
		(rule__Param__Group__0)
		{ after(grammarAccess.getParamAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDotExpression
entryRuleDotExpression
:
{ before(grammarAccess.getDotExpressionRule()); }
	 ruleDotExpression
{ after(grammarAccess.getDotExpressionRule()); } 
	 EOF 
;

// Rule DotExpression
ruleDotExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDotExpressionAccess().getGroup()); }
		(rule__DotExpression__Group__0)
		{ after(grammarAccess.getDotExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleRef
entryRuleSingleRef
:
{ before(grammarAccess.getSingleRefRule()); }
	 ruleSingleRef
{ after(grammarAccess.getSingleRefRule()); } 
	 EOF 
;

// Rule SingleRef
ruleSingleRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleRefAccess().getGroup()); }
		(rule__SingleRef__Group__0)
		{ after(grammarAccess.getSingleRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
		(rule__Property__Alternatives)
		{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarType
entryRuleVarType
:
{ before(grammarAccess.getVarTypeRule()); }
	 ruleVarType
{ after(grammarAccess.getVarTypeRule()); } 
	 EOF 
;

// Rule VarType
ruleVarType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarTypeAccess().getNameAssignment()); }
		(rule__VarType__NameAssignment)
		{ after(grammarAccess.getVarTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRange
entryRuleRange
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeAccess().getGroup()); }
		(rule__Range__Group__0)
		{ after(grammarAccess.getRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealLiteralAccess().getGroup()); }
		(rule__RealLiteral__Group__0)
		{ after(grammarAccess.getRealLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnityObject
entryRuleUnityObject
:
{ before(grammarAccess.getUnityObjectRule()); }
	 ruleUnityObject
{ after(grammarAccess.getUnityObjectRule()); } 
	 EOF 
;

// Rule UnityObject
ruleUnityObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnityObjectAccess().getGroup()); }
		(rule__UnityObject__Group__0)
		{ after(grammarAccess.getUnityObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOverrideAction
entryRuleOverrideAction
:
{ before(grammarAccess.getOverrideActionRule()); }
	 ruleOverrideAction
{ after(grammarAccess.getOverrideActionRule()); } 
	 EOF 
;

// Rule OverrideAction
ruleOverrideAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOverrideActionAccess().getGroup()); }
		(rule__OverrideAction__Group__0)
		{ after(grammarAccess.getOverrideActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfigAssignment
entryRuleConfigAssignment
:
{ before(grammarAccess.getConfigAssignmentRule()); }
	 ruleConfigAssignment
{ after(grammarAccess.getConfigAssignmentRule()); } 
	 EOF 
;

// Rule ConfigAssignment
ruleConfigAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigAssignmentAccess().getGroup()); }
		(rule__ConfigAssignment__Group__0)
		{ after(grammarAccess.getConfigAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfig
entryRuleConfig
:
{ before(grammarAccess.getConfigRule()); }
	 ruleConfig
{ after(grammarAccess.getConfigRule()); } 
	 EOF 
;

// Rule Config
ruleConfig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigAccess().getGroup()); }
		(rule__Config__Group__0)
		{ after(grammarAccess.getConfigAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleENV
entryRuleENV
:
{ before(grammarAccess.getENVRule()); }
	 ruleENV
{ after(grammarAccess.getENVRule()); } 
	 EOF 
;

// Rule ENV
ruleENV 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getENVAccess().getGroup()); }
		(rule__ENV__Group__0)
		{ after(grammarAccess.getENVAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstance
entryRuleInstance
:
{ before(grammarAccess.getInstanceRule()); }
	 ruleInstance
{ after(grammarAccess.getInstanceRule()); } 
	 EOF 
;

// Rule Instance
ruleInstance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceAccess().getGroup()); }
		(rule__Instance__Group__0)
		{ after(grammarAccess.getInstanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChannel
entryRuleChannel
:
{ before(grammarAccess.getChannelRule()); }
	 ruleChannel
{ after(grammarAccess.getChannelRule()); } 
	 EOF 
;

// Rule Channel
ruleChannel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChannelAccess().getGroup()); }
		(rule__Channel__Group__0)
		{ after(grammarAccess.getChannelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInit
entryRuleInit
:
{ before(grammarAccess.getInitRule()); }
	 ruleInit
{ after(grammarAccess.getInitRule()); } 
	 EOF 
;

// Rule Init
ruleInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitAccess().getGroup()); }
		(rule__Init__Group__0)
		{ after(grammarAccess.getInitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMap
entryRuleMap
:
{ before(grammarAccess.getMapRule()); }
	 ruleMap
{ after(grammarAccess.getMapRule()); } 
	 EOF 
;

// Rule Map
ruleMap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapAccess().getGroup()); }
		(rule__Map__Group__0)
		{ after(grammarAccess.getMapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQName
entryRuleQName
:
{ before(grammarAccess.getQNameRule()); }
	 ruleQName
{ after(grammarAccess.getQNameRule()); } 
	 EOF 
;

// Rule QName
ruleQName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQNameAccess().getGroup()); }
		(rule__QName__Group__0)
		{ after(grammarAccess.getQNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAreaName
entryRuleAreaName
:
{ before(grammarAccess.getAreaNameRule()); }
	 ruleAreaName
{ after(grammarAccess.getAreaNameRule()); } 
	 EOF 
;

// Rule AreaName
ruleAreaName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAreaNameAccess().getGroup()); }
		(rule__AreaName__Group__0)
		{ after(grammarAccess.getAreaNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePort
entryRulePort
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortAccess().getGroup()); }
		(rule__Port__Group__0)
		{ after(grammarAccess.getPortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleinterfaceType
entryRuleinterfaceType
:
{ before(grammarAccess.getInterfaceTypeRule()); }
	 ruleinterfaceType
{ after(grammarAccess.getInterfaceTypeRule()); } 
	 EOF 
;

// Rule interfaceType
ruleinterfaceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getNameAssignment()); }
		(rule__InterfaceType__NameAssignment)
		{ after(grammarAccess.getInterfaceTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAssignParserRuleCall()); }
		ruleAssign
		{ after(grammarAccess.getExpressionAccess().getAssignParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssign
entryRuleAssign
:
{ before(grammarAccess.getAssignRule()); }
	 ruleAssign
{ after(grammarAccess.getAssignRule()); } 
	 EOF 
;

// Rule Assign
ruleAssign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignAccess().getGroup()); }
		(rule__Assign__Group__0)
		{ after(grammarAccess.getAssignAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrExpression
entryRuleOrExpression
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
		(rule__OrExpression__Group__0)
		{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonOperators
entryRuleComparisonOperators
:
{ before(grammarAccess.getComparisonOperatorsRule()); }
	 ruleComparisonOperators
{ after(grammarAccess.getComparisonOperatorsRule()); } 
	 EOF 
;

// Rule ComparisonOperators
ruleComparisonOperators 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonOperatorsAccess().getGroup()); }
		(rule__ComparisonOperators__Group__0)
		{ after(grammarAccess.getComparisonOperatorsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplication
entryRuleMultiplication
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
		(rule__Multiplication__Group__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnary
entryRuleUnary
:
{ before(grammarAccess.getUnaryRule()); }
	 ruleUnary
{ after(grammarAccess.getUnaryRule()); } 
	 EOF 
;

// Rule Unary
ruleUnary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryAccess().getAlternatives()); }
		(rule__Unary__Alternatives)
		{ after(grammarAccess.getUnaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpressionNotPlusMinus
entryRuleUnaryExpressionNotPlusMinus
:
{ before(grammarAccess.getUnaryExpressionNotPlusMinusRule()); }
	 ruleUnaryExpressionNotPlusMinus
{ after(grammarAccess.getUnaryExpressionNotPlusMinusRule()); } 
	 EOF 
;

// Rule UnaryExpressionNotPlusMinus
ruleUnaryExpressionNotPlusMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getAlternatives()); }
		(rule__UnaryExpressionNotPlusMinus__Alternatives)
		{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotBooleanExpression
entryRuleNotBooleanExpression
:
{ before(grammarAccess.getNotBooleanExpressionRule()); }
	 ruleNotBooleanExpression
{ after(grammarAccess.getNotBooleanExpressionRule()); } 
	 EOF 
;

// Rule NotBooleanExpression
ruleNotBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotBooleanExpressionAccess().getGroup()); }
		(rule__NotBooleanExpression__Group__0)
		{ after(grammarAccess.getNotBooleanExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteralOrIdentifier
entryRuleLiteralOrIdentifier
:
{ before(grammarAccess.getLiteralOrIdentifierRule()); }
	 ruleLiteralOrIdentifier
{ after(grammarAccess.getLiteralOrIdentifierRule()); } 
	 EOF 
;

// Rule LiteralOrIdentifier
ruleLiteralOrIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralOrIdentifierAccess().getAlternatives()); }
		(rule__LiteralOrIdentifier__Alternatives)
		{ after(grammarAccess.getLiteralOrIdentifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntLiteralAccess().getGroup()); }
		(rule__IntLiteral__Group__0)
		{ after(grammarAccess.getIntLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral
:
{ before(grammarAccess.getBoolLiteralRule()); }
	 ruleBoolLiteral
{ after(grammarAccess.getBoolLiteralRule()); } 
	 EOF 
;

// Rule BoolLiteral
ruleBoolLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getGroup()); }
		(rule__BoolLiteral__Group__0)
		{ after(grammarAccess.getBoolLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStLiteral
entryRuleStLiteral
:
{ before(grammarAccess.getStLiteralRule()); }
	 ruleStLiteral
{ after(grammarAccess.getStLiteralRule()); } 
	 EOF 
;

// Rule StLiteral
ruleStLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStLiteralAccess().getGroup()); }
		(rule__StLiteral__Group__0)
		{ after(grammarAccess.getStLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIdentifier
entryRuleIdentifier
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;

// Rule Identifier
ruleIdentifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifierAccess().getRefrenceAssignment()); }
		(rule__Identifier__RefrenceAssignment)
		{ after(grammarAccess.getIdentifierAccess().getRefrenceAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__SpecAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getSpecUnityObjectParserRuleCall_0_0()); }
		ruleUnityObject
		{ after(grammarAccess.getSpecificationAccess().getSpecUnityObjectParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSpecificationAccess().getSpecMetaObjectParserRuleCall_0_1()); }
		ruleMetaObject
		{ after(grammarAccess.getSpecificationAccess().getSpecMetaObjectParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getSpecificationAccess().getSpecENVParserRuleCall_0_2()); }
		ruleENV
		{ after(grammarAccess.getSpecificationAccess().getSpecENVParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__KindAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaObjectAccess().getKindCarKeyword_3_0_0()); }
		'car'
		{ after(grammarAccess.getMetaObjectAccess().getKindCarKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetaObjectAccess().getKindRoverKeyword_3_0_1()); }
		'rover'
		{ after(grammarAccess.getMetaObjectAccess().getKindRoverKeyword_3_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMetaObjectAccess().getKindOthersKeyword_3_0_2()); }
		'others'
		{ after(grammarAccess.getMetaObjectAccess().getKindOthersKeyword_3_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaObjectAccess().getPropertiesAssignment_5_0()); }
		(rule__MetaObject__PropertiesAssignment_5_0)
		{ after(grammarAccess.getMetaObjectAccess().getPropertiesAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getMetaObjectAccess().getActionsAssignment_5_1()); }
		(rule__MetaObject__ActionsAssignment_5_1)
		{ after(grammarAccess.getMetaObjectAccess().getActionsAssignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getAttributeParserRuleCall_0()); }
		ruleAttribute
		{ after(grammarAccess.getPropertyAccess().getAttributeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getInstanceParserRuleCall_1()); }
		ruleInstance
		{ after(grammarAccess.getPropertyAccess().getInstanceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getParamParserRuleCall_2()); }
		ruleParam
		{ after(grammarAccess.getPropertyAccess().getParamParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarType__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarTypeAccess().getNameBoolKeyword_0_0()); }
		'bool'
		{ after(grammarAccess.getVarTypeAccess().getNameBoolKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarTypeAccess().getNameIntKeyword_0_1()); }
		'int'
		{ after(grammarAccess.getVarTypeAccess().getNameIntKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getVarTypeAccess().getNameStringKeyword_0_2()); }
		'string'
		{ after(grammarAccess.getVarTypeAccess().getNameStringKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getVarTypeAccess().getNameRealKeyword_0_3()); }
		'real'
		{ after(grammarAccess.getVarTypeAccess().getNameRealKeyword_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getGroup_0()); }
		(rule__Value__Group_0__0)
		{ after(grammarAccess.getValueAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getFixedPointValueAssignment_1()); }
		(rule__Value__FixedPointValueAssignment_1)
		{ after(grammarAccess.getValueAccess().getFixedPointValueAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnityObjectAccess().getConfigurationsAssignment_5_0()); }
		(rule__UnityObject__ConfigurationsAssignment_5_0)
		{ after(grammarAccess.getUnityObjectAccess().getConfigurationsAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnityObjectAccess().getNewActionsAssignment_5_1()); }
		(rule__UnityObject__NewActionsAssignment_5_1)
		{ after(grammarAccess.getUnityObjectAccess().getNewActionsAssignment_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnityObjectAccess().getOverrideActionsAssignment_5_2()); }
		(rule__UnityObject__OverrideActionsAssignment_5_2)
		{ after(grammarAccess.getUnityObjectAccess().getOverrideActionsAssignment_5_2()); }
	)
	|
	(
		{ before(grammarAccess.getUnityObjectAccess().getPropertiesAssignment_5_3()); }
		(rule__UnityObject__PropertiesAssignment_5_3)
		{ after(grammarAccess.getUnityObjectAccess().getPropertiesAssignment_5_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getENVAccess().getChannelsAssignment_3_0()); }
		(rule__ENV__ChannelsAssignment_3_0)
		{ after(grammarAccess.getENVAccess().getChannelsAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getENVAccess().getMapsAssignment_3_1()); }
		(rule__ENV__MapsAssignment_3_1)
		{ after(grammarAccess.getENVAccess().getMapsAssignment_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getENVAccess().getPropertiesAssignment_3_2()); }
		(rule__ENV__PropertiesAssignment_3_2)
		{ after(grammarAccess.getENVAccess().getPropertiesAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getGroup_5_0()); }
		(rule__Channel__Group_5_0__0)
		{ after(grammarAccess.getChannelAccess().getGroup_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getChannelAccess().getGroup_5_1()); }
		(rule__Channel__Group_5_1__0)
		{ after(grammarAccess.getChannelAccess().getGroup_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getNameTCPKeyword_0_0()); }
		'TCP'
		{ after(grammarAccess.getInterfaceTypeAccess().getNameTCPKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getNameIPCKeyword_0_1()); }
		'IPC'
		{ after(grammarAccess.getInterfaceTypeAccess().getNameIPCKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Alternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_0()); }
		(rule__ComparisonOperators__Group_1_0_0_0__0)
		{ after(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_1()); }
		(rule__ComparisonOperators__Group_1_0_0_1__0)
		{ after(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_2()); }
		(rule__ComparisonOperators__Group_1_0_0_2__0)
		{ after(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_3()); }
		(rule__ComparisonOperators__Group_1_0_0_3__0)
		{ after(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_4()); }
		(rule__ComparisonOperators__Group_1_0_0_4__0)
		{ after(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_5()); }
		(rule__ComparisonOperators__Group_1_0_0_5__0)
		{ after(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Alternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup_1_0_0_0()); }
		(rule__Addition__Group_1_0_0_0__0)
		{ after(grammarAccess.getAdditionAccess().getGroup_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditionAccess().getGroup_1_0_0_1()); }
		(rule__Addition__Group_1_0_0_1__0)
		{ after(grammarAccess.getAdditionAccess().getGroup_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Alternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_0_0()); }
		(rule__Multiplication__Group_1_0_0_0__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_0_1()); }
		(rule__Multiplication__Group_1_0_0_1__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0_0_2()); }
		(rule__Multiplication__Group_1_0_0_2__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getUnaryExpressionNotPlusMinusParserRuleCall_0()); }
		ruleUnaryExpressionNotPlusMinus
		{ after(grammarAccess.getUnaryAccess().getUnaryExpressionNotPlusMinusParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryAccess().getGroup_1()); }
		(rule__Unary__Group_1__0)
		{ after(grammarAccess.getUnaryAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpressionNotPlusMinus__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getNotBooleanExpressionParserRuleCall_0()); }
		ruleNotBooleanExpression
		{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getNotBooleanExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getPrimaryExpressionParserRuleCall_1()); }
		rulePrimaryExpression
		{ after(grammarAccess.getUnaryExpressionNotPlusMinusAccess().getPrimaryExpressionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralOrIdentifierParserRuleCall_0()); }
		ruleLiteralOrIdentifier
		{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralOrIdentifierParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
		(rule__PrimaryExpression__Group_1__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralOrIdentifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralOrIdentifierAccess().getLiteralParserRuleCall_0()); }
		ruleLiteral
		{ after(grammarAccess.getLiteralOrIdentifierAccess().getLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralOrIdentifierAccess().getIdentifierParserRuleCall_1()); }
		ruleIdentifier
		{ after(grammarAccess.getLiteralOrIdentifierAccess().getIdentifierParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
		ruleIntLiteral
		{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_1()); }
		ruleBoolLiteral
		{ after(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStLiteralParserRuleCall_2()); }
		ruleStLiteral
		{ after(grammarAccess.getLiteralAccess().getStLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_3()); }
		ruleRealLiteral
		{ after(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaObject__Group__0__Impl
	rule__MetaObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaObjectAccess().getMetaObjectKeyword_0()); }
	'MetaObject'
	{ after(grammarAccess.getMetaObjectAccess().getMetaObjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaObject__Group__1__Impl
	rule__MetaObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaObjectAccess().getNameAssignment_1()); }
	(rule__MetaObject__NameAssignment_1)
	{ after(grammarAccess.getMetaObjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaObject__Group__2__Impl
	rule__MetaObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaObjectAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getMetaObjectAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaObject__Group__3__Impl
	rule__MetaObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaObjectAccess().getKindAssignment_3()); }
	(rule__MetaObject__KindAssignment_3)
	{ after(grammarAccess.getMetaObjectAccess().getKindAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaObject__Group__4__Impl
	rule__MetaObject__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaObjectAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getMetaObjectAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaObject__Group__5__Impl
	rule__MetaObject__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaObjectAccess().getAlternatives_5()); }
	(rule__MetaObject__Alternatives_5)*
	{ after(grammarAccess.getMetaObjectAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaObject__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaObjectAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getMetaObjectAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActionKeyword_0()); }
	'Action'
	{ after(grammarAccess.getActionAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getNameAssignment_1()); }
	(rule__Action__NameAssignment_1)
	{ after(grammarAccess.getActionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getActionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getPayloadAssignment_3()); }
	(rule__Action__PayloadAssignment_3)?
	{ after(grammarAccess.getActionAccess().getPayloadAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__4__Impl
	rule__Action__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getActionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__5__Impl
	rule__Action__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getGroup_5()); }
	(rule__Action__Group_5__0)
	{ after(grammarAccess.getActionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__6__Impl
	rule__Action__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__7__Impl
	rule__Action__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getExpressionsAssignment_7()); }
	(rule__Action__ExpressionsAssignment_7)*
	{ after(grammarAccess.getActionAccess().getExpressionsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_5__0__Impl
	rule__Action__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getReturnKeyword_5_0()); }
	'return'
	{ after(grammarAccess.getActionAccess().getReturnKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_5__1__Impl
	rule__Action__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getLeftParenthesisKeyword_5_1()); }
	'('
	{ after(grammarAccess.getActionAccess().getLeftParenthesisKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_5__2__Impl
	rule__Action__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getReturnPayloadAssignment_5_2()); }
	(rule__Action__ReturnPayloadAssignment_5_2)?
	{ after(grammarAccess.getActionAccess().getReturnPayloadAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getActionAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Payload__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Payload__Group__0__Impl
	rule__Payload__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Payload__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayloadAccess().getParamsAssignment_0()); }
	(rule__Payload__ParamsAssignment_0)
	{ after(grammarAccess.getPayloadAccess().getParamsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Payload__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Payload__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Payload__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayloadAccess().getGroup_1()); }
	(rule__Payload__Group_1__0)*
	{ after(grammarAccess.getPayloadAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Payload__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Payload__Group_1__0__Impl
	rule__Payload__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Payload__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayloadAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getPayloadAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Payload__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Payload__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Payload__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPayloadAccess().getParamsAssignment_1_1()); }
	(rule__Payload__ParamsAssignment_1_1)
	{ after(grammarAccess.getPayloadAccess().getParamsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getNameAssignment_0()); }
	(rule__Param__NameAssignment_0)
	{ after(grammarAccess.getParamAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__1__Impl
	rule__Param__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParamAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Param__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAccess().getTypeAssignment_2()); }
	(rule__Param__TypeAssignment_2)
	{ after(grammarAccess.getParamAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DotExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotExpression__Group__0__Impl
	rule__DotExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DotExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDotExpressionAccess().getSingleRefParserRuleCall_0()); }
	ruleSingleRef
	{ after(grammarAccess.getDotExpressionAccess().getSingleRefParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DotExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DotExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDotExpressionAccess().getGroup_1()); }
	(rule__DotExpression__Group_1__0)*
	{ after(grammarAccess.getDotExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DotExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotExpression__Group_1__0__Impl
	rule__DotExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DotExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDotExpressionAccess().getDotExpressionHeadAction_1_0()); }
	()
	{ after(grammarAccess.getDotExpressionAccess().getDotExpressionHeadAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DotExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotExpression__Group_1__1__Impl
	rule__DotExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DotExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDotExpressionAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getDotExpressionAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DotExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DotExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DotExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDotExpressionAccess().getTailAssignment_1_2()); }
	(rule__DotExpression__TailAssignment_1_2)
	{ after(grammarAccess.getDotExpressionAccess().getTailAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRef__Group__0__Impl
	rule__SingleRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRefAccess().getSingleRefAction_0()); }
	()
	{ after(grammarAccess.getSingleRefAccess().getSingleRefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleRefAccess().getSingleRefAssignment_1()); }
	(rule__SingleRef__SingleRefAssignment_1)
	{ after(grammarAccess.getSingleRefAccess().getSingleRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getPropertyKeyword_0()); }
	'property'
	{ after(grammarAccess.getAttributeAccess().getPropertyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
	(rule__Attribute__NameAssignment_1)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getAttributeAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getPropertyTypeAssignment_3()); }
	(rule__Attribute__PropertyTypeAssignment_3)
	{ after(grammarAccess.getAttributeAccess().getPropertyTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getGroup_4()); }
	(rule__Attribute__Group_4__0)?
	{ after(grammarAccess.getAttributeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_4__0__Impl
	rule__Attribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getRangeKeyword_4_0()); }
	'range'
	{ after(grammarAccess.getAttributeAccess().getRangeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getRangeAssignment_4_1()); }
	(rule__Attribute__RangeAssignment_4_1)
	{ after(grammarAccess.getAttributeAccess().getRangeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getRangeAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getFromAssignment_1()); }
	(rule__Range__FromAssignment_1)
	{ after(grammarAccess.getRangeAccess().getFromAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__2__Impl
	rule__Range__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getHyphenMinusKeyword_2()); }
	'-'
	{ after(grammarAccess.getRangeAccess().getHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__3__Impl
	rule__Range__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getToAssignment_3()); }
	(rule__Range__ToAssignment_3)
	{ after(grammarAccess.getRangeAccess().getToAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getRangeAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_0__0__Impl
	rule__Value__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getMinuesAssignment_0_0()); }
	(rule__Value__MinuesAssignment_0_0)?
	{ after(grammarAccess.getValueAccess().getMinuesAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValueAssignment_0_1()); }
	(rule__Value__ValueAssignment_0_1)
	{ after(grammarAccess.getValueAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group__0__Impl
	rule__RealLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getIntPartAssignment_0()); }
	(rule__RealLiteral__IntPartAssignment_0)
	{ after(grammarAccess.getRealLiteralAccess().getIntPartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group__1__Impl
	rule__RealLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getRealLiteralAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getDecimalPartAssignment_2()); }
	(rule__RealLiteral__DecimalPartAssignment_2)
	{ after(grammarAccess.getRealLiteralAccess().getDecimalPartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnityObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnityObject__Group__0__Impl
	rule__UnityObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnityObjectAccess().getObjectKeyword_0()); }
	'Object'
	{ after(grammarAccess.getUnityObjectAccess().getObjectKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnityObject__Group__1__Impl
	rule__UnityObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnityObjectAccess().getNameAssignment_1()); }
	(rule__UnityObject__NameAssignment_1)
	{ after(grammarAccess.getUnityObjectAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnityObject__Group__2__Impl
	rule__UnityObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnityObjectAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getUnityObjectAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnityObject__Group__3__Impl
	rule__UnityObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnityObjectAccess().getTypeAssignment_3()); }
	(rule__UnityObject__TypeAssignment_3)
	{ after(grammarAccess.getUnityObjectAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnityObject__Group__4__Impl
	rule__UnityObject__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnityObjectAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getUnityObjectAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnityObject__Group__5__Impl
	rule__UnityObject__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnityObjectAccess().getAlternatives_5()); }
	(rule__UnityObject__Alternatives_5)*
	{ after(grammarAccess.getUnityObjectAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnityObject__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnityObjectAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getUnityObjectAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OverrideAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideAction__Group__0__Impl
	rule__OverrideAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideActionAccess().getOverrideKeyword_0()); }
	'override'
	{ after(grammarAccess.getOverrideActionAccess().getOverrideKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideAction__Group__1__Impl
	rule__OverrideAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideActionAccess().getActionNameAssignment_1()); }
	(rule__OverrideAction__ActionNameAssignment_1)
	{ after(grammarAccess.getOverrideActionAccess().getActionNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideAction__Group__2__Impl
	rule__OverrideAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideActionAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getOverrideActionAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideAction__Group__3__Impl
	rule__OverrideAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideActionAccess().getExpressionsAssignment_3()); }
	(rule__OverrideAction__ExpressionsAssignment_3)*
	{ after(grammarAccess.getOverrideActionAccess().getExpressionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OverrideAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOverrideActionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOverrideActionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConfigAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigAssignment__Group__0__Impl
	rule__ConfigAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAssignmentAccess().getConfigKeyword_0()); }
	'config'
	{ after(grammarAccess.getConfigAssignmentAccess().getConfigKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigAssignment__Group__1__Impl
	rule__ConfigAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAssignmentAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getConfigAssignmentAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigAssignment__Group__2__Impl
	rule__ConfigAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAssignmentAccess().getConfigAssignmentAction_2()); }
	()
	{ after(grammarAccess.getConfigAssignmentAccess().getConfigAssignmentAction_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigAssignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigAssignment__Group__3__Impl
	rule__ConfigAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigAssignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConfigAssignmentAccess().getConfigsAssignment_3()); }
		(rule__ConfigAssignment__ConfigsAssignment_3)
		{ after(grammarAccess.getConfigAssignmentAccess().getConfigsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getConfigAssignmentAccess().getConfigsAssignment_3()); }
		(rule__ConfigAssignment__ConfigsAssignment_3)*
		{ after(grammarAccess.getConfigAssignmentAccess().getConfigsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigAssignment__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConfigAssignment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigAssignment__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAssignmentAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getConfigAssignmentAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__0__Impl
	rule__Config__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getPropertyNameAssignment_0()); }
	(rule__Config__PropertyNameAssignment_0)
	{ after(grammarAccess.getConfigAccess().getPropertyNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__1__Impl
	rule__Config__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getConfigAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getPropertyValueAssignment_2()); }
	(rule__Config__PropertyValueAssignment_2)
	{ after(grammarAccess.getConfigAccess().getPropertyValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ENV__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ENV__Group__0__Impl
	rule__ENV__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getENVAccess().getEnvKeyword_0()); }
	'Env'
	{ after(grammarAccess.getENVAccess().getEnvKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ENV__Group__1__Impl
	rule__ENV__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getENVAccess().getNameAssignment_1()); }
	(rule__ENV__NameAssignment_1)
	{ after(grammarAccess.getENVAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ENV__Group__2__Impl
	rule__ENV__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getENVAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getENVAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ENV__Group__3__Impl
	rule__ENV__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getENVAccess().getAlternatives_3()); }
	(rule__ENV__Alternatives_3)*
	{ after(grammarAccess.getENVAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ENV__Group__4__Impl
	rule__ENV__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getENVAccess().getInitCodesAssignment_4()); }
	(rule__ENV__InitCodesAssignment_4)?
	{ after(grammarAccess.getENVAccess().getInitCodesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ENV__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getENVAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getENVAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__0__Impl
	rule__Instance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getInstanceKeyword_0()); }
	'Instance'
	{ after(grammarAccess.getInstanceAccess().getInstanceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__1__Impl
	rule__Instance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getNameAssignment_1()); }
	(rule__Instance__NameAssignment_1)
	{ after(grammarAccess.getInstanceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__2__Impl
	rule__Instance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getInstanceAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instance__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceAccess().getInstanceTypeAssignment_3()); }
	(rule__Instance__InstanceTypeAssignment_3)
	{ after(grammarAccess.getInstanceAccess().getInstanceTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Channel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__0__Impl
	rule__Channel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getChannelKeyword_0()); }
	'Channel'
	{ after(grammarAccess.getChannelAccess().getChannelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__1__Impl
	rule__Channel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getInterfaceNameAssignment_1()); }
	(rule__Channel__InterfaceNameAssignment_1)
	{ after(grammarAccess.getChannelAccess().getInterfaceNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__2__Impl
	rule__Channel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getTypeAssignment_2()); }
	(rule__Channel__TypeAssignment_2)
	{ after(grammarAccess.getChannelAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__3__Impl
	rule__Channel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getGroup_3()); }
	(rule__Channel__Group_3__0)?
	{ after(grammarAccess.getChannelAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__4__Impl
	rule__Channel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getChannelAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__5__Impl
	rule__Channel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getAlternatives_5()); }
	(rule__Channel__Alternatives_5)
	{ after(grammarAccess.getChannelAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getChannelAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Channel__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group_3__0__Impl
	rule__Channel__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getCardinalityKeyword_3_0()); }
	'cardinality'
	{ after(grammarAccess.getChannelAccess().getCardinalityKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getCardinalityAssignment_3_1()); }
	(rule__Channel__CardinalityAssignment_3_1)
	{ after(grammarAccess.getChannelAccess().getCardinalityAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Channel__Group_5_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group_5_0__0__Impl
	rule__Channel__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getIpAssignment_5_0_0()); }
	(rule__Channel__IpAssignment_5_0_0)
	{ after(grammarAccess.getChannelAccess().getIpAssignment_5_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group_5_0__1__Impl
	rule__Channel__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getCommaKeyword_5_0_1()); }
	','
	{ after(grammarAccess.getChannelAccess().getCommaKeyword_5_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getPortAssignment_5_0_2()); }
	(rule__Channel__PortAssignment_5_0_2)
	{ after(grammarAccess.getChannelAccess().getPortAssignment_5_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Channel__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group_5_1__0__Impl
	rule__Channel__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getAreanameAssignment_5_1_0()); }
	(rule__Channel__AreanameAssignment_5_1_0)
	{ after(grammarAccess.getChannelAccess().getAreanameAssignment_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group_5_1__1__Impl
	rule__Channel__Group_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getCommaKeyword_5_1_1()); }
	','
	{ after(grammarAccess.getChannelAccess().getCommaKeyword_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Channel__Group_5_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__Group_5_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChannelAccess().getQnameAssignment_5_1_2()); }
	(rule__Channel__QnameAssignment_5_1_2)
	{ after(grammarAccess.getChannelAccess().getQnameAssignment_5_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Init__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init__Group__0__Impl
	rule__Init__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitAccess().getConfigKeyword_0()); }
	'config'
	{ after(grammarAccess.getInitAccess().getConfigKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init__Group__1__Impl
	rule__Init__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getInitAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init__Group__2__Impl
	rule__Init__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitAccess().getExpressionsAssignment_2()); }
	(rule__Init__ExpressionsAssignment_2)*
	{ after(grammarAccess.getInitAccess().getExpressionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Init__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getInitAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Map__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group__0__Impl
	rule__Map__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getLoadKeyword_0()); }
	'load'
	{ after(grammarAccess.getMapAccess().getLoadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group__1__Impl
	rule__Map__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getMapKeyword_1()); }
	'map'
	{ after(grammarAccess.getMapAccess().getMapKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group__2__Impl
	rule__Map__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getMapNameAssignment_2()); }
	(rule__Map__MapNameAssignment_2)
	{ after(grammarAccess.getMapAccess().getMapNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group__3__Impl
	rule__Map__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getFromKeyword_3()); }
	'from'
	{ after(grammarAccess.getMapAccess().getFromKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Map__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapAccess().getPathNameAssignment_4()); }
	(rule__Map__PathNameAssignment_4)
	{ after(grammarAccess.getMapAccess().getPathNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QName__Group__0__Impl
	rule__QName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNameAccess().getQnameKeyword_0()); }
	'qname'
	{ after(grammarAccess.getQNameAccess().getQnameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QName__Group__1__Impl
	rule__QName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNameAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getQNameAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQNameAccess().getNameAssignment_2()); }
	(rule__QName__NameAssignment_2)
	{ after(grammarAccess.getQNameAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AreaName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AreaName__Group__0__Impl
	rule__AreaName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AreaName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaNameAccess().getAreaKeyword_0()); }
	'area'
	{ after(grammarAccess.getAreaNameAccess().getAreaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AreaName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AreaName__Group__1__Impl
	rule__AreaName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AreaName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaNameAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAreaNameAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AreaName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AreaName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AreaName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAreaNameAccess().getNameAssignment_2()); }
	(rule__AreaName__NameAssignment_2)
	{ after(grammarAccess.getAreaNameAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Port__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__0__Impl
	rule__Port__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getPortKeyword_0()); }
	'port'
	{ after(grammarAccess.getPortAccess().getPortKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__1__Impl
	rule__Port__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPortAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__2__Impl
	rule__Port__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getNameAssignment_2()); }
	(rule__Port__NameAssignment_2)
	{ after(grammarAccess.getPortAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__3__Impl
	rule__Port__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getPortnumberKeyword_3()); }
	'portnumber'
	{ after(grammarAccess.getPortAccess().getPortnumberKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__4__Impl
	rule__Port__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getPortAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getPortnumberAssignment_5()); }
	(rule__Port__PortnumberAssignment_5)
	{ after(grammarAccess.getPortAccess().getPortnumberAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group__0__Impl
	rule__Assign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getOrExpressionParserRuleCall_0()); }
	ruleOrExpression
	{ after(grammarAccess.getAssignAccess().getOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getGroup_1()); }
	(rule__Assign__Group_1__0)*
	{ after(grammarAccess.getAssignAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assign__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group_1__0__Impl
	rule__Assign__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getAssignLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAssignAccess().getAssignLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group_1__1__Impl
	rule__Assign__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getEqualsSignKeyword_1_1()); }
	'='
	{ after(grammarAccess.getAssignAccess().getEqualsSignKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assign__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignAccess().getRightAssignment_1_2()); }
	(rule__Assign__RightAssignment_1_2)
	{ after(grammarAccess.getAssignAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
	(rule__OrExpression__Group_1__0)*
	{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getOrExpressionAccess().getOrExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getOrKeyword_1_1()); }
	'or'
	{ after(grammarAccess.getOrExpressionAccess().getOrKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
	(rule__OrExpression__RightAssignment_1_2)
	{ after(grammarAccess.getOrExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getComparisonOperatorsParserRuleCall_0()); }
	ruleComparisonOperators
	{ after(grammarAccess.getAndExpressionAccess().getComparisonOperatorsParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndKeyword_1_1()); }
	'and'
	{ after(grammarAccess.getAndExpressionAccess().getAndKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperators__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group__0__Impl
	rule__ComparisonOperators__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getAdditionParserRuleCall_0()); }
	ruleAddition
	{ after(grammarAccess.getComparisonOperatorsAccess().getAdditionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getGroup_1()); }
	(rule__ComparisonOperators__Group_1__0)*
	{ after(grammarAccess.getComparisonOperatorsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperators__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1__0__Impl
	rule__ComparisonOperators__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0()); }
	(rule__ComparisonOperators__Group_1_0__0)
	{ after(grammarAccess.getComparisonOperatorsAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getRestAssignment_1_1()); }
	(rule__ComparisonOperators__RestAssignment_1_1)
	{ after(grammarAccess.getComparisonOperatorsAccess().getRestAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperators__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getAlternatives_1_0_0()); }
	(rule__ComparisonOperators__Alternatives_1_0_0)
	{ after(grammarAccess.getComparisonOperatorsAccess().getAlternatives_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperators__Group_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_0__0__Impl
	rule__ComparisonOperators__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getGTLeftAction_1_0_0_0_0()); }
	()
	{ after(grammarAccess.getComparisonOperatorsAccess().getGTLeftAction_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getGreaterThanSignKeyword_1_0_0_0_1()); }
	'>'
	{ after(grammarAccess.getComparisonOperatorsAccess().getGreaterThanSignKeyword_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperators__Group_1_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_1__0__Impl
	rule__ComparisonOperators__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getLTLeftAction_1_0_0_1_0()); }
	()
	{ after(grammarAccess.getComparisonOperatorsAccess().getLTLeftAction_1_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getLessThanSignKeyword_1_0_0_1_1()); }
	'<'
	{ after(grammarAccess.getComparisonOperatorsAccess().getLessThanSignKeyword_1_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperators__Group_1_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_2__0__Impl
	rule__ComparisonOperators__Group_1_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getGELeftAction_1_0_0_2_0()); }
	()
	{ after(grammarAccess.getComparisonOperatorsAccess().getGELeftAction_1_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getGreaterThanSignEqualsSignKeyword_1_0_0_2_1()); }
	'>='
	{ after(grammarAccess.getComparisonOperatorsAccess().getGreaterThanSignEqualsSignKeyword_1_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperators__Group_1_0_0_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_3__0__Impl
	rule__ComparisonOperators__Group_1_0_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getLELeftAction_1_0_0_3_0()); }
	()
	{ after(grammarAccess.getComparisonOperatorsAccess().getLELeftAction_1_0_0_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getLessThanSignEqualsSignKeyword_1_0_0_3_1()); }
	'<='
	{ after(grammarAccess.getComparisonOperatorsAccess().getLessThanSignEqualsSignKeyword_1_0_0_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperators__Group_1_0_0_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_4__0__Impl
	rule__ComparisonOperators__Group_1_0_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getEQLeftAction_1_0_0_4_0()); }
	()
	{ after(grammarAccess.getComparisonOperatorsAccess().getEQLeftAction_1_0_0_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getEqualsSignEqualsSignKeyword_1_0_0_4_1()); }
	'=='
	{ after(grammarAccess.getComparisonOperatorsAccess().getEqualsSignEqualsSignKeyword_1_0_0_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComparisonOperators__Group_1_0_0_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_5__0__Impl
	rule__ComparisonOperators__Group_1_0_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getNELeftAction_1_0_0_5_0()); }
	()
	{ after(grammarAccess.getComparisonOperatorsAccess().getNELeftAction_1_0_0_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComparisonOperators__Group_1_0_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__Group_1_0_0_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonOperatorsAccess().getExclamationMarkEqualsSignKeyword_1_0_0_5_1()); }
	'!='
	{ after(grammarAccess.getComparisonOperatorsAccess().getExclamationMarkEqualsSignKeyword_1_0_0_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
	ruleMultiplication
	{ after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_1()); }
	(rule__Addition__Group_1__0)*
	{ after(grammarAccess.getAdditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__0__Impl
	rule__Addition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getGroup_1_0()); }
	(rule__Addition__Group_1_0__0)
	{ after(grammarAccess.getAdditionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
	(rule__Addition__RightAssignment_1_1)
	{ after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getAlternatives_1_0_0()); }
	(rule__Addition__Alternatives_1_0_0)
	{ after(grammarAccess.getAdditionAccess().getAlternatives_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0_0_0__0__Impl
	rule__Addition__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0_0_0_0()); }
	()
	{ after(grammarAccess.getAdditionAccess().getAdditionLeftAction_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_0_1()); }
	'+'
	{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group_1_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0_0_1__0__Impl
	rule__Addition__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_0_1_0()); }
	()
	{ after(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group_1_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_0_1_1()); }
	'-'
	{ after(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getUnaryParserRuleCall_0()); }
	ruleUnary
	{ after(grammarAccess.getMultiplicationAccess().getUnaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getGroup_1()); }
	(rule__Multiplication__Group_1__0)*
	{ after(grammarAccess.getMultiplicationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__0__Impl
	rule__Multiplication__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
	(rule__Multiplication__Group_1_0__0)
	{ after(grammarAccess.getMultiplicationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
	(rule__Multiplication__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getAlternatives_1_0_0()); }
	(rule__Multiplication__Alternatives_1_0_0)
	{ after(grammarAccess.getMultiplicationAccess().getAlternatives_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_0_0__0__Impl
	rule__Multiplication__Group_1_0_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0_0_0_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getMultiplicationLeftAction_1_0_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_0_1()); }
	'*'
	{ after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_0_1__0__Impl
	rule__Multiplication__Group_1_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getDivideLeftAction_1_0_0_1_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getDivideLeftAction_1_0_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_0_1_1()); }
	'/'
	{ after(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group_1_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_0_2__0__Impl
	rule__Multiplication__Group_1_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getModuloLeftAction_1_0_0_2_0()); }
	()
	{ after(grammarAccess.getMultiplicationAccess().getModuloLeftAction_1_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group_1_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group_1_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getPercentSignKeyword_1_0_0_2_1()); }
	'%'
	{ after(grammarAccess.getMultiplicationAccess().getPercentSignKeyword_1_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Unary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1__0__Impl
	rule__Unary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getUnaryExpressionAction_1_0()); }
	()
	{ after(grammarAccess.getUnaryAccess().getUnaryExpressionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1__1__Impl
	rule__Unary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getHyphenMinusKeyword_1_1()); }
	'-'
	{ after(grammarAccess.getUnaryAccess().getHyphenMinusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Unary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryAccess().getExpAssignment_1_2()); }
	(rule__Unary__ExpAssignment_1_2)
	{ after(grammarAccess.getUnaryAccess().getExpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotBooleanExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotBooleanExpression__Group__0__Impl
	rule__NotBooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotBooleanExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotBooleanExpressionAccess().getExclamationMarkKeyword_0()); }
	'!'
	{ after(grammarAccess.getNotBooleanExpressionAccess().getExclamationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotBooleanExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotBooleanExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotBooleanExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotBooleanExpressionAccess().getExpAssignment_1()); }
	(rule__NotBooleanExpression__ExpAssignment_1)
	{ after(grammarAccess.getNotBooleanExpressionAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_1_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntLiteral__Group__0__Impl
	rule__IntLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntLiteralAccess().getIntLiteralAction_0()); }
	()
	{ after(grammarAccess.getIntLiteralAccess().getIntLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntLiteralAccess().getIntAssignment_1()); }
	(rule__IntLiteral__IntAssignment_1)
	{ after(grammarAccess.getIntLiteralAccess().getIntAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolLiteral__Group__0__Impl
	rule__BoolLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0()); }
	()
	{ after(grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolLiteralAccess().getBoolAssignment_1()); }
	(rule__BoolLiteral__BoolAssignment_1)
	{ after(grammarAccess.getBoolLiteralAccess().getBoolAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StLiteral__Group__0__Impl
	rule__StLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStLiteralAccess().getStLiteralAction_0()); }
	()
	{ after(grammarAccess.getStLiteralAccess().getStLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStLiteralAccess().getStringAssignment_1()); }
	(rule__StLiteral__StringAssignment_1)
	{ after(grammarAccess.getStLiteralAccess().getStringAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__SpecAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSpecificationAccess().getSpecAlternatives_0()); }
		(rule__Specification__SpecAlternatives_0)
		{ after(grammarAccess.getSpecificationAccess().getSpecAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaObjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMetaObjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__KindAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaObjectAccess().getKindAlternatives_3_0()); }
		(rule__MetaObject__KindAlternatives_3_0)
		{ after(grammarAccess.getMetaObjectAccess().getKindAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__PropertiesAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaObjectAccess().getPropertiesAttributeParserRuleCall_5_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getMetaObjectAccess().getPropertiesAttributeParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaObject__ActionsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaObjectAccess().getActionsActionParserRuleCall_5_1_0()); }
		ruleAction
		{ after(grammarAccess.getMetaObjectAccess().getActionsActionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__PayloadAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getPayloadPayloadParserRuleCall_3_0()); }
		rulePayload
		{ after(grammarAccess.getActionAccess().getPayloadPayloadParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ReturnPayloadAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getReturnPayloadPayloadParserRuleCall_5_2_0()); }
		rulePayload
		{ after(grammarAccess.getActionAccess().getReturnPayloadPayloadParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ExpressionsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getExpressionsExpressionParserRuleCall_7_0()); }
		ruleExpression
		{ after(grammarAccess.getActionAccess().getExpressionsExpressionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Payload__ParamsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPayloadAccess().getParamsParamParserRuleCall_0_0()); }
		ruleParam
		{ after(grammarAccess.getPayloadAccess().getParamsParamParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Payload__ParamsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPayloadAccess().getParamsParamParserRuleCall_1_1_0()); }
		ruleParam
		{ after(grammarAccess.getPayloadAccess().getParamsParamParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAccess().getTypeVarTypeParserRuleCall_2_0()); }
		ruleVarType
		{ after(grammarAccess.getParamAccess().getTypeVarTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DotExpression__TailAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDotExpressionAccess().getTailPropertyCrossReference_1_2_0()); }
		(
			{ before(grammarAccess.getDotExpressionAccess().getTailPropertyIDTerminalRuleCall_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDotExpressionAccess().getTailPropertyIDTerminalRuleCall_1_2_0_1()); }
		)
		{ after(grammarAccess.getDotExpressionAccess().getTailPropertyCrossReference_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRef__SingleRefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleRefAccess().getSingleRefPropertyCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSingleRefAccess().getSingleRefPropertyIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSingleRefAccess().getSingleRefPropertyIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSingleRefAccess().getSingleRefPropertyCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__PropertyTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getPropertyTypeVarTypeParserRuleCall_3_0()); }
		ruleVarType
		{ after(grammarAccess.getAttributeAccess().getPropertyTypeVarTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__RangeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getRangeRangeParserRuleCall_4_1_0()); }
		ruleRange
		{ after(grammarAccess.getAttributeAccess().getRangeRangeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarTypeAccess().getNameAlternatives_0()); }
		(rule__VarType__NameAlternatives_0)
		{ after(grammarAccess.getVarTypeAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__FromAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getFromValueParserRuleCall_1_0()); }
		ruleValue
		{ after(grammarAccess.getRangeAccess().getFromValueParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__ToAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getToValueParserRuleCall_3_0()); }
		ruleValue
		{ after(grammarAccess.getRangeAccess().getToValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__MinuesAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getMinuesHyphenMinusKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getValueAccess().getMinuesHyphenMinusKeyword_0_0_0()); }
			'-'
			{ after(grammarAccess.getValueAccess().getMinuesHyphenMinusKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getValueAccess().getMinuesHyphenMinusKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getValueAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__FixedPointValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getFixedPointValueRealLiteralParserRuleCall_1_0()); }
		ruleRealLiteral
		{ after(grammarAccess.getValueAccess().getFixedPointValueRealLiteralParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__IntPartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getIntPartINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getRealLiteralAccess().getIntPartINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__DecimalPartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getDecimalPartINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getRealLiteralAccess().getDecimalPartINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnityObjectAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUnityObjectAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnityObjectAccess().getTypeMetaObjectCrossReference_3_0()); }
		(
			{ before(grammarAccess.getUnityObjectAccess().getTypeMetaObjectIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUnityObjectAccess().getTypeMetaObjectIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getUnityObjectAccess().getTypeMetaObjectCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__ConfigurationsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnityObjectAccess().getConfigurationsConfigAssignmentParserRuleCall_5_0_0()); }
		ruleConfigAssignment
		{ after(grammarAccess.getUnityObjectAccess().getConfigurationsConfigAssignmentParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__NewActionsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnityObjectAccess().getNewActionsActionParserRuleCall_5_1_0()); }
		ruleAction
		{ after(grammarAccess.getUnityObjectAccess().getNewActionsActionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__OverrideActionsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnityObjectAccess().getOverrideActionsOverrideActionParserRuleCall_5_2_0()); }
		ruleOverrideAction
		{ after(grammarAccess.getUnityObjectAccess().getOverrideActionsOverrideActionParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnityObject__PropertiesAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnityObjectAccess().getPropertiesAttributeParserRuleCall_5_3_0()); }
		ruleAttribute
		{ after(grammarAccess.getUnityObjectAccess().getPropertiesAttributeParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__ActionNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOverrideActionAccess().getActionNameActionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getOverrideActionAccess().getActionNameActionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getOverrideActionAccess().getActionNameActionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getOverrideActionAccess().getActionNameActionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OverrideAction__ExpressionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOverrideActionAccess().getExpressionsExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getOverrideActionAccess().getExpressionsExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigAssignment__ConfigsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAssignmentAccess().getConfigsConfigParserRuleCall_3_0()); }
		ruleConfig
		{ after(grammarAccess.getConfigAssignmentAccess().getConfigsConfigParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__PropertyNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getPropertyNameAttributeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getConfigAccess().getPropertyNameAttributeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getConfigAccess().getPropertyNameAttributeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getConfigAccess().getPropertyNameAttributeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__PropertyValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getPropertyValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConfigAccess().getPropertyValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getENVAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getENVAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__ChannelsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getENVAccess().getChannelsChannelParserRuleCall_3_0_0()); }
		ruleChannel
		{ after(grammarAccess.getENVAccess().getChannelsChannelParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__MapsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getENVAccess().getMapsMapParserRuleCall_3_1_0()); }
		ruleMap
		{ after(grammarAccess.getENVAccess().getMapsMapParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__PropertiesAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getENVAccess().getPropertiesPropertyParserRuleCall_3_2_0()); }
		ruleProperty
		{ after(grammarAccess.getENVAccess().getPropertiesPropertyParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ENV__InitCodesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getENVAccess().getInitCodesInitParserRuleCall_4_0()); }
		ruleInit
		{ after(grammarAccess.getENVAccess().getInitCodesInitParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__InstanceTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceAccess().getInstanceTypeUnityObjectCrossReference_3_0()); }
		(
			{ before(grammarAccess.getInstanceAccess().getInstanceTypeUnityObjectIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInstanceAccess().getInstanceTypeUnityObjectIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getInstanceAccess().getInstanceTypeUnityObjectCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__InterfaceNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getInterfaceNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getChannelAccess().getInterfaceNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getTypeInterfaceTypeParserRuleCall_2_0()); }
		ruleinterfaceType
		{ after(grammarAccess.getChannelAccess().getTypeInterfaceTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__CardinalityAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getCardinalityINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getChannelAccess().getCardinalityINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__IpAssignment_5_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getIpIDTerminalRuleCall_5_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getChannelAccess().getIpIDTerminalRuleCall_5_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__PortAssignment_5_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getPortPortParserRuleCall_5_0_2_0()); }
		rulePort
		{ after(grammarAccess.getChannelAccess().getPortPortParserRuleCall_5_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__AreanameAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getAreanameAreaNameParserRuleCall_5_1_0_0()); }
		ruleAreaName
		{ after(grammarAccess.getChannelAccess().getAreanameAreaNameParserRuleCall_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Channel__QnameAssignment_5_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChannelAccess().getQnameQNameParserRuleCall_5_1_2_0()); }
		ruleQName
		{ after(grammarAccess.getChannelAccess().getQnameQNameParserRuleCall_5_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Init__ExpressionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitAccess().getExpressionsExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getInitAccess().getExpressionsExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__MapNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapAccess().getMapNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getMapAccess().getMapNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Map__PathNameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapAccess().getPathNameStLiteralParserRuleCall_4_0()); }
		ruleStLiteral
		{ after(grammarAccess.getMapAccess().getPathNameStLiteralParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QName__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQNameAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getQNameAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AreaName__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAreaNameAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getAreaNameAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__PortnumberAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getPortnumberINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getPortAccess().getPortnumberINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceType__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getNameAlternatives_0()); }
		(rule__InterfaceType__NameAlternatives_0)
		{ after(grammarAccess.getInterfaceTypeAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assign__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignAccess().getRightOrExpressionParserRuleCall_1_2_0()); }
		ruleOrExpression
		{ after(grammarAccess.getAssignAccess().getRightOrExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightComparisonOperatorsParserRuleCall_1_2_0()); }
		ruleComparisonOperators
		{ after(grammarAccess.getAndExpressionAccess().getRightComparisonOperatorsParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperators__RestAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorsAccess().getRestAdditionParserRuleCall_1_1_0()); }
		ruleAddition
		{ after(grammarAccess.getComparisonOperatorsAccess().getRestAdditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
		ruleMultiplication
		{ after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getRightUnaryParserRuleCall_1_1_0()); }
		ruleUnary
		{ after(grammarAccess.getMultiplicationAccess().getRightUnaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unary__ExpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryAccess().getExpUnaryParserRuleCall_1_2_0()); }
		ruleUnary
		{ after(grammarAccess.getUnaryAccess().getExpUnaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotBooleanExpression__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotBooleanExpressionAccess().getExpUnaryParserRuleCall_1_0()); }
		ruleUnary
		{ after(grammarAccess.getNotBooleanExpressionAccess().getExpUnaryParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__IntAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntLiteralAccess().getIntINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getIntLiteralAccess().getIntINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__BoolAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getBoolBOOLEANTerminalRuleCall_1_0()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getBoolLiteralAccess().getBoolBOOLEANTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StLiteral__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStLiteralAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getStLiteralAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__RefrenceAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifierAccess().getRefrenceDotExpressionParserRuleCall_0()); }
		ruleDotExpression
		{ after(grammarAccess.getIdentifierAccess().getRefrenceDotExpressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
